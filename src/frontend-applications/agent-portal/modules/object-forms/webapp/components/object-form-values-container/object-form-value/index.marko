<!--
Copyright (C) 2006-2024 KIX Service Software GmbH, https://www.kixdesk.com
--
This software comes with ABSOLUTELY NO WARRANTY. For details, see
the enclosed file LICENSE for license information (GPL3). If you
did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.
--
-->

<if(state.prepared && state.formValue)>
   <div class=[
      "m-0 p-0",
      component.getFieldClasses(),
      {
         "my-2 pe-2": !state.displayNone,
      },
   ]>
      <div class=[
         {
            "d-none": state.displayNone,
         },
      ]>
         <label class="form-label d-flex align-items-center m-0 mb-1 text-truncate">
            <add-remove-form-value-control
               formValue=input.formValue
               key=("control-" + input.formValue.instanceId)
            />
            <if(input.contextInstanceId)>
               <button
                  type="button"
                  class="btn btn-sm btn-light text-black me-3"
                  aria-label="Edit Field"
                  title=(state.translations["Translatable#Edit Field"])
                  on-click("editField")
               >
                  <i class="fa-regular fa-pen-to-square"/>
               </button>
            </if>
            ${state.label}
            <if(state.required)>
               *
            </if>
            <if(state.hint)>
               <overlay-icon isHint content=state.hint title=state.label/>
            </if>
            <if(input.contextInstanceId)>
               <if(!state.enabled)>
                  <span class="badge text-bg-danger mx-2">
                     <translation-string pattern="Translatable#Disabled"/>
                  </span>
               </if>
               <if(!state.visible)>
                  <span class="badge text-bg-warning mx-2">
                     <translation-string pattern="Translatable#Set Hidden"/>
                  </span>
               </if>
               <if(state.isEmpty)>
                  <span class="badge text-bg-secondary mx-2">
                     <translation-string pattern="Translatable#Clear in mask"/>
                  </span>
               </if>
               <if(state.configReadOnly)>
                  <span class="badge text-bg-secondary mx-2">
                     Readonly
                  </span>
               </if>
            </if>
         </label>

         <if(state.formValue.description)>
            <div class="alert alert-light" role="alert">
               $!{state.formValue.description}
            </div>
         </if>
         <div class=[
            "m-0 p-0",
            {
               border: !state.valid,
               "border-danger": !state.valid,
               "text-danger": !state.valid,
               rounded: !state.valid,
            },
         ]>
            <if(input.contextInstanceId && state.isEmpty)/>
            <else-if(!state.formValue["COUNT_CONTAINER"])>
               <if(state.inputTemplate)>
                  <${state.inputTemplate} formValue=input.formValue/>
               </if>
               <else-if(input.formValue.inputComponentId === "no-input")/>
               <else>
                  <text-form-input formValue=input.formValue/>
               </else>
            </else-if>
         </div>
      </div>
      <if(
         !state.displayNone &&
         !state.formValue.readonly &&
         Array.isArray(state.formValue.actions) &&
         state.formValue.actions.length > 0
      )>
         <actions-container
            actions=(state.formValue.actions)
            isSelectInput=(
               state.formValue.inputComponentId === "select-form-input"
            )
         />
      </if>

      <if(state.validationErrors.length)>
         <div class="col-12">
            <for|validationError| of=state.validationErrors>
               <span class="text-danger">
                  ${validationError.message}
               </span>
            </for>
         </div>
      </if>
      <if(Array.isArray(state.formValues) && state.formValues.length)>
         <object-form-values-container
            formValues=state.formValues
            parent=input.formValue
            contextInstanceId=input.contextInstanceId
            formLayout=input.formLayout
         />
      </if>
   </div>
</if>
