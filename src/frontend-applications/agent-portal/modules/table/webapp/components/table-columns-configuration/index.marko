<!--
Copyright (C) 2006-2025 KIX Service Software GmbH, https://www.kixdesk.com
--
This software comes with ABSOLUTELY NO WARRANTY. For details, see
the enclosed file LICENSE for license information (GPL3). If you
did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.
--
-->

<h2 class="configuration-title">
    <translation-string pattern="Translatable#Table Columns"/>
</h2>
<div class="row">
    <div class="col-6">
        <div class="property-chooser">
            <label>
                ${state.translations["Translatable#Dependency"] +
                (state.dependencyName ? ` (${state.dependencyName})` : "")}
            </label>
            <form-list treeId=state.dependencyTreeId multiselect/>
        </div>
    </div>
    <div class="col-6">
        <div class="property-chooser">
            <label>${state.translations["Translatable#Property"]}</label>
            <form-list treeId=state.propertyTreeId multiselect freeText/>
            <button
                type="button"
                on-click("addColumn")
                title=(state.translations["Translatable#Add Column(s)"])
                class="kix-button submit-button"
            >
                <span class="kix-icon-plus-blank"/>
                <translation-string pattern="Translatable#Add Column(s)"/>
            </button>
        </div>
    </div>
</div>

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <if(!state.loading)>
                <th title=(state.translations["Translatable#Property"])>
                    ${state.translations["Translatable#Property"]}
                </th>
                <th title=(state.translations["Translatable#Dependency"])>
                    ${state.translations["Translatable#Dependency"]}
                </th>
            </if>
            <th title=(state.translations["Translatable#Text"])>
                ${state.translations["Translatable#Text"]}
            </th>
            <th title=(state.translations["Translatable#Icon"])>
                ${state.translations["Translatable#Icon"]}
            </th>
            <if(input.advancedSettings)>
                <th title=(state.translations["Translatable#Column Title"])>
                    ${state.translations["Translatable#Column Title"]}
                </th>
                <th title=(state.translations["Translatable#Column Icon"])>
                    ${state.translations["Translatable#Column Icon"]}
                </th>
                <th title=(state.translations["Translatable#Sortable"])>
                    ${state.translations["Translatable#Sortable"]}
                </th>
                <th title=(state.translations["Translatable#Filterable"])>
                    ${state.translations["Translatable#Filterable"]}
                </th>
                <th title=(state.translations["Translatable#Filter List"])>
                    ${state.translations["Translatable#Filter List"]}
                </th>
                <th title=(state.translations["Translatable#Resizable"])>
                    ${state.translations["Translatable#Resizable"]}
                </th>
                <th title=(state.translations["Translatable#Translatable"])>
                    ${state.translations["Translatable#Translatable"]}
                </th>
                <th title=(
                    state.translations["Translatable#Translatable Title"]
                )>
                    ${state.translations["Translatable#Translatable Title"]}
                </th>
                <th title=(state.translations["Translatable#RTL"])>
                    ${state.translations["Translatable#RTL"]}
                </th>
                <th title=(state.translations["Translatable#Size (px)"])>
                    ${state.translations["Translatable#Size (px)"]}
                </th>
                <th title=(state.translations["Translatable#Component ID"])>
                    ${state.translations["Translatable#Component ID"]}
                </th>
                <th title=(state.translations["Translatable#Column Title"])>
                    ${state.translations["Translatable#Column Title"]}
                </th>
            </if>
            <th/>
        </tr>
    </thead>
    <tbody>
        <for|column| of=state.columns>
            <tr
                draggable="true"
                on-dragstart("rowDragstart", column)
                on-dragover("rowDragover", column)
                on-drop("rowDroped", column)
            >
                <if(!state.loading)>
                    <td title=(state.columnNames[column.property])>
                        <span>${state.columnNames[column.property]}</span>
                    </td>
                    <td title=(state.columnDependencyNames[column.property])>
                        <span>
                            ${state.columnDependencyNames[column.property]}
                        </span>
                    </td>
                </if>
                <td on-click("booleanValueChanged", "showText", column)>
                    <input type="checkbox" checked=column.showText>
                </td>
                <td on-click("booleanValueChanged", "showIcon", column)>
                    <input type="checkbox" checked=column.showIcon>
                </td>
                <if(input.advancedSettings)>
                    <td on-click(
                        "booleanValueChanged",
                        "showColumnTitle",
                        column,
                    )>
                        <input type="checkbox" checked=column.showColumnTitle>
                    </td>
                    <td on-click(
                        "booleanValueChanged",
                        "showColumnIcon",
                        column,
                    )>
                        <input type="checkbox" checked=column.showColumnIcon>
                    </td>
                    <td on-click("booleanValueChanged", "sortable", column)>
                        <input type="checkbox" checked=column.sortable>
                    </td>
                    <td on-click("booleanValueChanged", "filterable", column)>
                        <input type="checkbox" checked=column.filterable>
                    </td>
                    <td on-click(
                        "booleanValueChanged",
                        "hasListFilter",
                        column,
                    )>
                        <input type="checkbox" checked=column.hasListFilter>
                    </td>
                    <td on-click("booleanValueChanged", "resizable", column)>
                        <input type="checkbox" checked=column.resizable>
                    </td>
                    <td on-click("booleanValueChanged", "translatable", column)>
                        <input type="checkbox" checked=column.translatable>
                    </td>
                    <td on-click(
                        "booleanValueChanged",
                        "titleTranslatable",
                        column,
                    )>
                        <input type="checkbox" checked=column.titleTranslatable>
                    </td>
                    <td on-click("booleanValueChanged", "rtl", column)>
                        <input type="checkbox" checked=column.rtl>
                    </td>
                    <td>
                        <input
                            type="numeric"
                            value=column.size
                            on-change("columnSizeChanged", column)
                            class="input-style"
                        >
                    </td>
                    <td>
                        <input
                            type="text"
                            value=column.componentId
                            on-change(
                                "stringValueChanged",
                                "componentId",
                                column,
                            )
                            class="input-style"
                        >
                    </td>
                    <td>
                        <input
                            type="text"
                            value=column.defaultText
                            on-change(
                                "stringValueChanged",
                                "defaultText",
                                column,
                            )
                            class="input-style"
                        >
                    </td>
                </if>
                <td>
                    <button
                        type="button"
                        title=(state.translations["Translatable#Remove"])
                        on-click("removeColumn", column)
                        class="form-control-button button-without-text"
                    >
                        <span class="kix-icon-minus"/>
                    </button>
                </td>
            </tr>
        </for>
    </tbody>
</table>
