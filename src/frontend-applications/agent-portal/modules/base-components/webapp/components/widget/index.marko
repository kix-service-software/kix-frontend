<!--
Copyright (C) 2006-2025 KIX Service Software GmbH, https://www.kixdesk.com
--
This software comes with ABSOLUTELY NO WARRANTY. For details, see
the enclosed file LICENSE for license information (GPL3). If you
did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.
--
-->

<div
    class=component.getWidgetClasses()
    data-widgettype=state.widgetType
    data-instanceid=state.instanceId
    data-configurationtype=(
        state.widgetConfiguration ? state.widgetConfiguration.type : ""
    )
    data-widgetid=(
        state.widgetConfiguration ? state.widgetConfiguration.widgetid : ""
    )
>
    <div
        class=[
            "widget-header",
            {
                minimizable: state.minimizable,
            },
        ]
        on-click("minimizeWidget", false)
        on-mousedown("headerMousedown", false)
    >
        <span class="header-left">
            <div class=[
                "widget-title",
                {
                    "with-icon": input.icon,
                },
            ]>
                <if(input.icon)>
                    <icon
                        icon=input.icon
                        on-click("minimizeWidget", true)
                        on-mousedown("headerMousedown", true)
                    />
                </if>
                <h2
                    title=state.title
                    on-click("minimizeWidget", true)
                    on-mousedown("headerMousedown", true)
                    class="m-0"
                >
                    <translation-string pattern=state.title/>
                </h2>
            </div>
            <if(input.headercontent)>
                <${input.headercontent}/>
            </if>
            <if(input.headerfilter)>
                <div class="widget-filter">
                    <${input.headerfilter}/>
                </div>
            </if>
        </span>
        <span on-click("minimizeWidget", true) class="header-right">
            <action-list
                list=input.actions
                instanceId=state.instanceId
                displayText=component.getWidgetTypeActionDisplaySetting()
                on-actionListClicked("doNotChangeMinimize")
            />
            <if(state.minimizable)>
                <span class="minimize-icon-wrapper">
                    <if(state.minimized)>
                        <span
                            on-click("minimizeWidget", true)
                            class="kix-icon-sort-down as-button"
                        />
                    </if>
                    <else>
                        <span
                            on-click("minimizeWidget", true)
                            class="kix-icon-triangle-up as-button"
                        >
                            <span class="path1"/>
                            <span class="path2"/>
                        </span>
                    </else>
                </span>
            </if>
            <if(state.closable)>
                <span class="close-icon-wrapper">
                    <span
                        on-click("closeClicked")
                        class="kix-icon-close as-button"
                    />
                </span>
            </if>
        </span>
    </div>
    <!-- TODO: maybe not needed anymore -->
    <!-- <if(component.isLaneWidget() && !state.minimized)>
        <if(Array.isArray(input.contentActions) && input.contentActions.length)>
            <ul.lane-content-actions key=("content-actions" + Math.random())>
                <if(Array.isArray(input.contentActions))>
                    <for|action| of=input.contentActions>
                        <li key=action.id>
                            <action action=action displayText=false/>
                        </li>
                    </for>
                </if>
            </ul>
        </if>
    </if> -->
    <if(!state.minimized)>
        <div key="widget-content" class="widget-content">
            <if(
                Array.isArray(input.contentActions) &&
                input.contentActions.length
            )>
                <if(component.isContentWidget())>
                    <div
                        key="content-actions" + Math.random()
                        class="content-actions"
                    >
                        <action-list list=input.contentActions/>
                    </div>
                </if>
            </if>
            <if(input.content)>
                <${
                    component.isSidebarWidget() ? "div" : null
                } class="scroll-container">
                    <${input.content} key=state.instanceId/>
                </>
            </if>
        </div>
    </if>
</div>
