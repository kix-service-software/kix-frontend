<!--
Copyright (C) 2006-2025 KIX Service Software GmbH, https://www.kixdesk.com
--
This software comes with ABSOLUTELY NO WARRANTY. For details, see
the enclosed file LICENSE for license information (GPL3). If you
did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.
--
-->

<li
    class=[
        "tree-node",
        {
            active: component.isNodeActive() | component.hasActiveChild(),
            "show-as-invalid":
                !state.node.selectable || state.node.showAsInvalid,
        },
    ]
    id=state.nodeId
    key=state.nodeId
>
    <span class="tree-icon">
        <if(component.hasChildren())>
            <span
                id="tree-expand"
                class=(
                    state.node.expanded
                        ? "kix-icon-minus"
                        : "kix-icon-plus-blank"
                )
                on-click("toggleNode")
            />
        </if>
    </span>
    <div
        on-mousemove("nodeHovered")
        on-click("nodeClicked")
        title=component.getLabel()
        class="node-value"
    >
        <if(state.node.icon)>
            <icon icon=(state.node.icon) showUnknown/>
        </if>
        <span class=["node-title", state.node.expanded ? "expanded" : ""]>
            ${state.node.label}
            <if(Array.isArray(state.node.properties) && state.node.properties.length)>
                &nbsp; (
                <for|prop, index| of=(state.node.properties)>
                    <if(index != 0)>
                        |
                    </if>
                    <span
                        title=prop.title
                        class=(prop.cssClass ? prop.cssClass : "")
                    >
                        ${prop.value}
                    </span>
                </for>
                 )
            </if>
        </span>
        <if(state.node.secondaryIcon)>
            <icon icon=(state.node.secondaryIcon)/>
        </if>
    </div>
    <if(state.node.expanded)>
        <ul class="tree-list">
            <for|node| of=(state.node.children)>
                <if(node.visible)>
                    <tree-node
                        node=node
                        activeNode=state.activeNode
                        treeId=state.treeId
                        expandIfActiveChild=input.expandIfActiveChild
                        on-nodeToggled("childNodeToggled")
                        on-nodeClicked("childNodeClicked")
                        on-nodeHovered("childNodeHovered")
                    />
                </if>
            </for>
        </ul>
    </if>
</li>
